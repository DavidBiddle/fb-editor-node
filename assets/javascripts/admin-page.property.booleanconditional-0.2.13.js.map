{"version":3,"sources":["webpack://@ministryofjustice/fb-editor-node/./src/js/admin-page.property.booleanconditional.js"],"names":["booleanConditional","document","querySelector","getOperator","operatorName","allowableOperators","filter","operator","getOperatorProperty","property","getIdentifier","identifierName","allowableIdentifiers","identifier","name","getIdentifierProperty","createSelect","values","selectedValue","selectElement","forEach","item","value","label","createIdentifier","condition","conditionId","map","fullTitle","asIsOperators","createOperator","type","negated","includes","operators","createValue","enums","valueName","undefined","createAnswer","endsWith","conditionsLabel","all","any","exactly","conditionsDelimiter","conditionsType","Object","keys","createConditionsType","currentType","conditionsTypeName","conditionType","createConditions","conditions","conditionsId","conditionIdCounter","conditionParts","newConditionId","noDelete","length","createCondition","conditionsRevert","addCondition","join","valueControl","style","display","JSON","parse","stringify","conditionRemove","conditionConvert","insertAdjacentHTML","conditionContainer","conditionsToggler","jsonMode","uiImpossible","updateConditions","renderedCondition","innerHTML","showJSONMode","showJSON","uiDisplay","jsonDisplay","toggleLabel","addEventListener","e","target","targetDestination","getAttribute","targetAction","getValueDestination","push","targetIndex","replace","m","m1","splice","destination","destinationValue","key","targetValue","split","valueDestination","startsWith","substr","currentValue","numberValue","Number","isNaN","updateValueControl","formElements","forms","elements","unescape","reverse","allowableOperatorsIn","entries","yes","no","parentNode","insertBefore","nextSibling","eval","input","booleanConditionalNodeList","booleanConditionalOptions","typeValue","toString","classList","remove","index","this"],"mappings":"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","file":"admin-page.property.booleanconditional-0.2.13.js","sourcesContent":["\r\nconst booleanConditional = document.querySelector('.booleanConditionalOptions')\r\n\r\nconst getOperator = (operatorName) => {\r\n  return allowableOperators.filter(operator => operator.operator === operatorName)[0] || {}\r\n}\r\nconst getOperatorProperty = (operatorName, property) => getOperator(operatorName)[property]\r\nconst getIdentifier = (identifierName) => {\r\n  return allowableIdentifiers.filter(identifier => identifier.name === identifierName)[0] || {}\r\n}\r\nconst getIdentifierProperty = (identifierName, property) => getIdentifier(identifierName)[property]\r\n\r\nconst createSelect = (name, values, selectedValue) => {\r\n  let selectElement = `<select name=\"${name}\" class=\"govuk-select\" style=\"width:auto; min-width: 10rem; max-width:100%; display:block;margin-bottom: 0.5rem;\"><option value=\"\"></option>`\r\n  values.forEach(item => {\r\n    selectElement += `<option value=\"${item.value}\"${selectedValue === item.value ? ' selected' : ''}>${item.label}</option>`\r\n  })\r\n  selectElement += '<select>'\r\n  return selectElement\r\n}\r\n\r\nconst createIdentifier = (condition, conditionId) => {\r\n  const { identifier } = condition\r\n  const values = allowableIdentifiers.map(item => {\r\n    return {\r\n      value: item.name,\r\n      label: item.fullTitle // + ' (' + item.name + ')'\r\n    }\r\n  })\r\n  const identifierElement = createSelect(`identifier===${conditionId}`, values, identifier)\r\n  return identifierElement\r\n}\r\n\r\nconst asIsOperators = [\r\n  'boolean',\r\n  'date',\r\n  'number'\r\n]\r\nconst createOperator = (condition, conditionId) => {\r\n  let { identifier, operator, type, negated } = condition\r\n  if (!identifier) {\r\n    return ''\r\n  }\r\n  if (negated) {\r\n    operator = `!${operator}`\r\n  }\r\n  type = getIdentifierProperty(identifier, 'type')\r\n  if (!asIsOperators.includes(type)) {\r\n    type = 'string'\r\n  }\r\n  const operators = allowableOperators.filter(operator => {\r\n    if (!operator.type) {\r\n      return true\r\n    }\r\n    const enumsMatch = true\r\n    const typeMatch = operator.type === 'any' || operator.type === type\r\n    return typeMatch && enumsMatch\r\n  })\r\n  const operatorElement = createSelect(`operator===${conditionId}`, operators, operator)\r\n  return operatorElement\r\n}\r\n\r\nconst createValue = (condition, conditionId) => {\r\n  const { operator, value, enums } = condition\r\n  if (!operator || operator === 'defined' || operator === 'isTrue') {\r\n    return ''\r\n  }\r\n  let valueElement\r\n  const valueName = `value===${conditionId}`\r\n  if (enums && (operator === 'is' || operator === 'equals' || operator === 'defined')) {\r\n    valueElement = createSelect(valueName, enums, value)\r\n  } else {\r\n    valueElement = `<input type=\"text\" name=\"${valueName}\" value=\"${value === undefined ? '' : value}\" class=\"govuk-input\" style=\"width:10em;\">`\r\n  }\r\n  return valueElement\r\n}\r\n\r\nconst createAnswer = (condition) => {\r\n  const { identifier } = condition\r\n  const answerElement = identifier && identifier.endsWith('[*]') ? 'any answer for' : 'the answer for'\r\n  return answerElement\r\n}\r\n\r\nconst conditionsLabel = {\r\n  all: 'all these conditions are met',\r\n  any: 'at least one of these conditons is met',\r\n  exactly: 'one of these conditions is met'\r\n}\r\nconst conditionsDelimiter = {\r\n  all: 'and',\r\n  any: 'and/or',\r\n  exactly: 'or'\r\n}\r\nconst conditionsType = Object.keys(conditionsLabel)\r\n\r\nconst createConditionsType = (currentType, conditionId) => {\r\n  const conditionsTypeName = `conditionsType===${conditionId}`\r\n  const enums = conditionsType.map(conditionType => {\r\n    return {\r\n      label: conditionsLabel[conditionType],\r\n      value: conditionType\r\n    }\r\n  })\r\n  const valueElement = createSelect(conditionsTypeName, enums, currentType)\r\n  return valueElement\r\n}\r\nconst createConditions = (conditions, conditionId = '', type) => {\r\n  const conditionsId = `${conditionId}.${type}`\r\n  let conditionIdCounter = 0\r\n  const conditionParts = conditions.map(condition => {\r\n    const newConditionId = `${conditionsId}[${conditionIdCounter}]`\r\n    conditionIdCounter++\r\n    const noDelete = conditions.length === 1\r\n    return createCondition(condition, newConditionId, noDelete)\r\n  })\r\n  const conditionsRevert = conditions.length === 1 ? `<p class=\"govuk-button fb-action-secondary fb-action--revert-conditions condition-action condition-revert\" data-destination=\"${conditionsId}\" data-action=\"revert\">Convert to single condition</p>` : ''\r\n  const conditionsType = createConditionsType(type, conditionId)\r\n  const addCondition = `<p class=\"govuk-button fb-action-secondary fb-action--add fb-action--add-condition conditionsAdd\" data-action=\"add\" data-destination=\"${conditionsId}\">Add condition</p>`\r\n  return `<div class=\"conditions-block\">${conditionsType}${conditionsRevert}<div class=\"conditions-subconditions\">${conditionParts.join(`<p class=\"conditions-delimiter\">${conditionsDelimiter[type]}</p>`)}${addCondition}</div></div>`\r\n}\r\n\r\nconst createCondition = (condition, conditionId = '', noDelete) => {\r\n  if (typeof condition !== 'object') {\r\n    valueControl.style.display = 'none'\r\n    return ''\r\n  }\r\n  condition = JSON.parse(JSON.stringify(condition))\r\n  const { all, any, exactly } = condition\r\n  if (all) {\r\n    return createConditions(all, conditionId, 'all')\r\n  }\r\n  if (any) {\r\n    return createConditions(any, conditionId, 'any')\r\n  }\r\n  if (exactly) {\r\n    return createConditions(exactly, conditionId, 'exactly')\r\n  }\r\n  // console.log('conditionId', conditionId)\r\n  const { identifier } = condition\r\n  const enums = allowableIdentifiers.filter(item => item.name === identifier).map(item => item.enums)[0]\r\n  condition.enums = enums\r\n  let conditionRemove = ''\r\n  if (conditionId !== '' && !noDelete) {\r\n    conditionRemove = `<p class=\"govuk-button fb-action-secondary fb-action--remove-condition condition-action condition-remove\" data-destination=\"${conditionId}\" data-action=\"remove\">Delete</p>`\r\n  }\r\n  const conditionConvert = `<p class=\"govuk-button fb-action-secondary fb-action--convert-condition condition-action condition-convert\" data-destination=\"${conditionId || 'TOP'}\" data-action=\"convert\">Convert to multiple conditions</p>`\r\n  if (identifier !== 'undefined') {\r\n    return `<div class=\"condition-individual\">${createAnswer(condition)} ${createIdentifier(condition, conditionId)} ${createOperator(condition, conditionId)} ${createValue(condition, conditionId)}${conditionRemove}${conditionConvert}</div>`\r\n  }\r\n}\r\n\r\nbooleanConditional.insertAdjacentHTML('afterend', '<div id=\"conditions\"></div><p id=\"conditionsToggle\"><span class=\"govuk-button fb-action-secondary\"></span></p>')\r\n\r\nconst conditionContainer = document.querySelector('#conditions')\r\nconst conditionsToggler = document.querySelector('#conditionsToggle .fb-action-secondary')\r\n\r\nlet jsonMode = false\r\nlet uiImpossible = false\r\n\r\nconst updateConditions = (condition) => {\r\n  const renderedCondition = createCondition(condition)\r\n  if (renderedCondition !== undefined) {\r\n    uiImpossible = false\r\n    conditionContainer.innerHTML = renderedCondition\r\n    showJSONMode(jsonMode)\r\n  } else {\r\n    uiImpossible = true\r\n    showJSONMode(true)\r\n  }\r\n}\r\nconst showJSONMode = (showJSON) => {\r\n  jsonMode = !!showJSON\r\n  let uiDisplay = ''\r\n  let jsonDisplay = 'none'\r\n  let toggleLabel = 'Edit JSON'\r\n  if (showJSON) {\r\n    uiDisplay = 'none'\r\n    jsonDisplay = ''\r\n    toggleLabel = 'Edit with UI'\r\n  }\r\n  if (uiImpossible) {\r\n    toggleLabel = 'Cannot show JSON structure through UI'\r\n  }\r\n  conditionContainer.style.display = uiDisplay\r\n  valueControl.style.display = jsonDisplay\r\n  conditionsToggler.innerHTML = toggleLabel\r\n}\r\nconditionsToggler.addEventListener('click', () => {\r\n  if (uiImpossible) {\r\n    return\r\n  }\r\n  showJSONMode(!jsonMode)\r\n})\r\n\r\nconditionContainer.addEventListener('click', function (e) {\r\n  const target = e.target\r\n  let targetDestination = target.getAttribute('data-destination')\r\n  if (!targetDestination) {\r\n    return\r\n  }\r\n  const targetAction = target.getAttribute('data-action')\r\n  if (targetAction === 'add') {\r\n    const destination = getValueDestination(targetDestination)\r\n    destination.push({})\r\n  } else if (targetAction === 'remove') {\r\n    let targetIndex\r\n    targetDestination = targetDestination.replace(/\\[(\\d+)\\]$/, (m, m1) => {\r\n      targetIndex = m1\r\n      return ''\r\n    })\r\n    const destination = getValueDestination(targetDestination)\r\n    destination.splice(targetIndex, 1)\r\n  } else if (targetAction === 'convert') {\r\n    if (targetDestination === 'TOP') {\r\n      targetDestination = ''\r\n    }\r\n    const destination = getValueDestination(targetDestination)\r\n    const destinationValue = JSON.parse(JSON.stringify(destination))\r\n    Object.keys(destination).forEach(key => {\r\n      delete destination[key]\r\n    })\r\n    destination.all = [destinationValue]\r\n  } else if (targetAction === 'revert') {\r\n    const destinationValue = getValueDestination(targetDestination)\r\n    const destination = getValueDestination(targetDestination.replace(/\\.[^.]+$/, ''))\r\n    Object.keys(destination).forEach(key => {\r\n      delete destination[key]\r\n    })\r\n    Object.keys(destinationValue).forEach(key => {\r\n      destination[key] = destinationValue[key]\r\n    })\r\n  }\r\n  updateConditions(value)\r\n})\r\nconditionContainer.addEventListener('change', function (e) {\r\n  const target = e.target\r\n  let targetValue = target.value\r\n  let [name, destination] = target.name.split('===')\r\n  destination = destination || ''\r\n  const valueDestination = getValueDestination(destination)\r\n  if (name === 'identifier') {\r\n    delete valueDestination.operator\r\n    delete valueDestination.value\r\n  } else if (name === 'operator') {\r\n    if (targetValue.startsWith('!')) {\r\n      targetValue = targetValue.substr(1)\r\n      valueDestination.negated = true\r\n    } else {\r\n      delete valueDestination.negated\r\n    }\r\n    if (targetValue === 'defined' || targetValue === 'isTrue') {\r\n      delete valueDestination.value\r\n    }\r\n  } else if (name === 'conditionsType') {\r\n    let currentValue = []\r\n    conditionsType.forEach(type => {\r\n      if (valueDestination[type]) {\r\n        currentValue = valueDestination[type]\r\n        delete valueDestination[type]\r\n      }\r\n    })\r\n    valueDestination[targetValue] = currentValue\r\n  }\r\n  if (name === 'value' && targetValue !== '') {\r\n    const valueType = getOperatorProperty(value.operator, 'type')\r\n    // allowableOperators.filter(operator => operator.operator === value.operator)[0].type\r\n    if (valueType === 'number') {\r\n      const numberValue = Number(targetValue)\r\n      if (!isNaN(numberValue)) {\r\n        targetValue = numberValue\r\n      }\r\n    }\r\n  }\r\n  valueDestination[name] = targetValue\r\n  updateValueControl('condition')\r\n  updateConditions(value)\r\n})\r\n\r\nconst formElements = document.forms[0].elements\r\n\r\nconst allowableOperators = []\r\nconst allowableIdentifiers = JSON.parse(unescape(formElements.booleanConditional.value)).reverse()\r\nconst allowableOperatorsIn = JSON.parse(unescape(formElements.allowableOperators.value))\r\n\r\nObject.entries(allowableOperatorsIn).forEach(([key, { type, yes, no }]) => {\r\n  allowableOperators.push({\r\n    operator: key,\r\n    type,\r\n    value: key,\r\n    label: yes\r\n  })\r\n  allowableOperators.push({\r\n    operator: key,\r\n    type,\r\n    value: `!${key}`,\r\n    label: no\r\n  })\r\n})\r\n\r\nconst valueControl = formElements.value\r\nvalueControl.addEventListener('change', () => {\r\n  value = JSON.parse(valueControl.value)\r\n  updateConditions(value)\r\n})\r\n\r\nconditionContainer.parentNode.insertBefore(valueControl, conditionContainer.nextSibling)\r\n\r\nlet value = valueControl.value ? JSON.parse(valueControl.value) : valueControl.value\r\n\r\nconst getValueDestination = (destination) => {\r\n  let valueDestination\r\n  eval(`valueDestination = value${destination}`) // eslint-disable-line no-eval\r\n  return valueDestination\r\n}\r\n\r\nconst updateValueControl = (input) => {\r\n  if (input === 'condition') {\r\n    value = value || { identifier: '', operator: '' }\r\n    input = JSON.stringify(value, null, 2)\r\n  } else {\r\n    value = undefined\r\n  }\r\n  valueControl.value = input\r\n}\r\n\r\nconst booleanConditionalNodeList = formElements.booleanConditionalOptions\r\n\r\nconst typeValue = typeof value === 'boolean' ? value.toString() : 'condition'\r\nif (typeof value === 'boolean') {\r\n  value = undefined\r\n}\r\n\r\nbooleanConditionalNodeList.value = typeValue\r\n\r\nbooleanConditional.classList.remove('js-hidden')\r\n\r\nfor (let index = 0; index < 3; index++) {\r\n  booleanConditionalNodeList.item(index).addEventListener('change', function () {\r\n    updateValueControl(this.value)\r\n    updateConditions(value)\r\n  })\r\n}\r\n\r\nif (typeof value === 'object') {\r\n  updateConditions(value)\r\n} else {\r\n  valueControl.style.display = 'none'\r\n}\r\n"],"sourceRoot":""}