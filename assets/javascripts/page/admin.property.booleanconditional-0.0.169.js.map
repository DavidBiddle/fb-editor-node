{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/page/admin.property.booleanconditional.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","booleanConditional","document","querySelector","allowableOperators","allowableIdentifiers","getOperator","operatorName","filter","operator","getOperatorProperty","getIdentifier","identifierName","identifier","getIdentifierProperty","createSelect","values","selectedValue","selectElement","forEach","item","label","createIdentifier","condition","conditionId","map","fullTitle","asIsOperators","createOperator","type","negated","enums","includes","operators","createValue","valueElement","valueName","undefined","createAnswer","endsWith","conditionsLabel","all","any","exactly","conditionsDelimiter","conditionsType","keys","createConditionsType","currentType","conditionsTypeName","conditionType","createConditions","conditions","conditionsId","conditionIdCounter","conditionParts","newConditionId","noDelete","length","createCondition","conditionsRevert","addCondition","join","valueControl","style","display","JSON","parse","stringify","conditionRemove","conditionConvert","insertAdjacentHTML","conditionContainer","conditionsToggler","jsonMode","uiImpossible","updateConditions","renderedCondition","innerHTML","showJSONMode","showJSON","uiDisplay","jsonDisplay","toggleLabel","addEventListener","e","target","targetDestination","getAttribute","targetAction","getValueDestination","push","targetIndex","replace","m1","splice","destination","destinationValue","targetValue","split","valueDestination","startsWith","substr","currentValue","numberValue","Number","isNaN","updateValueControl","formElements","forms","elements","unescape","reverse","allowableOperatorsIn","operatorValues","yes","no","parentNode","insertBefore","nextSibling","eval","input","booleanConditionalNodeList","booleanConditionalOptions","typeValue","toString","classList","remove","index","this"],"mappings":"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","file":"page/admin.property.booleanconditional-0.0.169.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","\n//(() => {\n\n  const booleanConditional = document.querySelector('.booleanConditionalOptions')\n  if (!booleanConditional) {\n    //return\n  }\n  let allowableOperators\n  let allowableIdentifiers\n\n  const getOperator = (operatorName) => {\n    return allowableOperators.filter(operator => operator.operator === operatorName)[0] || {}\n  }\n  const getOperatorProperty = (operatorName, property) => getOperator(operatorName)[property]\n  const getIdentifier = (identifierName) => {\n    return allowableIdentifiers.filter(identifier => identifier.name === identifierName)[0] || {}\n  }\n  const getIdentifierProperty = (identifierName, property) => getIdentifier(identifierName)[property]\n\n  const createSelect = (name, values, selectedValue) => {\n    let selectElement = `<select name=\"${name}\" class=\"govuk-select\" style=\"width:auto; min-width: 10rem; max-width:100%; display:block;margin-bottom: 0.5rem;\"><option value=\"\"></option>`\n    values.forEach(item => {\n      selectElement += `<option value=\"${item.value}\"${ selectedValue === item.value ? ' selected' : ''}>${item.label}</option>`\n    })\n    selectElement += '<select>'\n    return selectElement\n  }\n\n  const createIdentifier = (condition, conditionId) => {\n    const {identifier} = condition\n    const values = allowableIdentifiers.map(item => {\n      return {\n        value: item.name,\n        label: item.fullTitle // + ' (' + item.name + ')'\n      }\n    })\n    let identifierElement = createSelect(`identifier===${conditionId}`, values, identifier)\n    return identifierElement\n  }\n\n  const asIsOperators = [\n    'boolean',\n    'date',\n    'number'\n  ]\n  const createOperator = (condition, conditionId) => {\n    let {identifier, operator, type, negated, enums} = condition\n    if (!identifier) {\n      return ''\n    }\n    if (negated) {\n      operator = `!${operator}`\n    }\n    type = getIdentifierProperty(identifier, 'type')\n    if (!asIsOperators.includes(type)) {\n      type = 'string'\n    }\n    const operators = allowableOperators.filter(operator => {\n      if (!operator.type) {\n        return true\n      }\n      let enumsMatch = true\n      if (enums) {\n        // enumsMatch = operator.operator === 'is' || operator.operator === 'equals' || operator.operator === 'defined'\n      }\n      let typeMatch = operator.type === 'any' || operator.type === type\n      return typeMatch && enumsMatch\n    })\n    let operatorElement = createSelect(`operator===${conditionId}`, operators, operator)\n    return operatorElement\n  }\n\n  const createValue = (condition, conditionId) => {\n    let {identifier, operator, value, enums} = condition\n    if (!operator || operator === 'defined' || operator === 'isTrue') {\n      return ''\n    }\n    let valueElement\n    let valueName = `value===${conditionId}`\n    if (enums && (operator === 'is' || operator === 'equals' || operator === 'defined')) {\n      valueElement = createSelect(valueName, enums, value)\n    } else {\n      valueElement = `<input type=\"text\" name=\"${valueName}\" value=\"${value === undefined ? '' : value}\" class=\"govuk-input\" style=\"width:10em;\">`\n    }\n    return valueElement\n  }\n\n  const createAnswer = (condition) => {\n    const {identifier} = condition\n    let answerElement = identifier && identifier.endsWith('[*]') ? 'any answer for' : 'the answer for'\n    return answerElement\n  }\n\n  const conditionsLabel = {\n    all: 'all these conditions are met',\n    any: 'at least one of these conditons is met',\n    exactly: 'one of these conditions is met'\n  }\n  const conditionsDelimiter = {\n    all: 'and',\n    any: 'and/or',\n    exactly: 'or'\n  }\n  const conditionsType = Object.keys(conditionsLabel)\n\n  const createConditionsType = (currentType, conditionId) => {\n    let conditionsTypeName = `conditionsType===${conditionId}`\n    let enums = conditionsType.map(conditionType => {\n      return {\n        label: conditionsLabel[conditionType],\n        value: conditionType\n      }\n    })\n    let valueElement = createSelect(conditionsTypeName, enums, currentType)\n    return valueElement\n  }\n  const createConditions = (conditions, conditionId = '', type) => {\n    let conditionsId = conditionId + '.' + type\n    let conditionIdCounter = 0\n    const conditionParts = conditions.map(condition => {\n      const newConditionId = `${conditionsId}[${conditionIdCounter}]`\n      conditionIdCounter++\n      const noDelete = conditions.length === 1\n      return createCondition(condition, newConditionId, noDelete)\n    })\n    const conditionsRevert = conditions.length === 1 ? '<p class=\"govuk-button fb-action-secondary fb-action--revert-conditions condition-action condition-revert\" data-destination=\"' + conditionsId + '\" data-action=\"revert\">Convert to single condition</p>' : ''\n    const conditionsType = createConditionsType(type, conditionId)\n    const addCondition = '<p class=\"govuk-button fb-action-secondary fb-action--add fb-action--add-condition conditionsAdd\" data-action=\"add\" data-destination=\"' + conditionsId + '\">Add condition</p>'\n    return '<div class=\"conditions-block\" >' + conditionsType + conditionsRevert + '<div class=\"conditions-subconditions\">' + conditionParts.join('<p class=\"conditions-delimiter\">' + conditionsDelimiter[type] + '</p>') + addCondition + '</div></div>'\n  }\n\n  let valueControl\n  const createCondition = (condition, conditionId = '', noDelete) => {\n    if (typeof condition !== 'object') {\n      valueControl.style.display = 'none'\n      return ''\n    }\n    condition = JSON.parse(JSON.stringify(condition))\n    const {all, any, exactly} = condition\n    if (all) {\n      return createConditions(all, conditionId, 'all')\n    }\n    if (any) {\n      return createConditions(any, conditionId, 'any')\n    }\n    if (exactly) {\n      return createConditions(exactly, conditionId, 'exactly')\n    }\n    //console.log('conditionId', conditionId)\n    const {identifier, operator, value, negated} = condition\n    const enums = allowableIdentifiers.filter(item => item.name === identifier).map(item => item.enums)[0]\n    condition.enums = enums\n    let conditionRemove = ''\n    if (conditionId !== '' && !noDelete) {\n      conditionRemove = '<p class=\"govuk-button fb-action-secondary fb-action--remove-condition condition-action condition-remove\" data-destination=\"' + conditionId + '\" data-action=\"remove\">Delete</p>'\n    }\n    let conditionConvert = '<p class=\"govuk-button fb-action-secondary fb-action--convert-condition condition-action condition-convert\" data-destination=\"' + (conditionId ? conditionId : 'TOP') + '\" data-action=\"convert\">Convert to multiple conditions</p>'\n    if (identifier !== 'undefined') {\n      return `<div class=\"condition-individual\">${createAnswer(condition)} ${createIdentifier(condition, conditionId)} ${createOperator(condition, conditionId)} ${createValue(condition, conditionId)}${conditionRemove}${conditionConvert}</div>`\n    } else {\n\n    }\n  }\n\n  // const valueGroup = document.querySelector('[data-block-id=\"admin.instance.property--value\"]')\n  // valueGroup.classList.add('js-hidden')\n\n  booleanConditional.insertAdjacentHTML('afterend', '<div id=\"conditions\"></div><p id=\"conditionsToggle\"><span class=\"govuk-button fb-action-secondary\"></span></p>')\n\n  const conditionContainer = document.querySelector('#conditions')\n  const conditionsToggler = document.querySelector('#conditionsToggle .fb-action-secondary')\n\n  let jsonMode = false\n  let uiImpossible = false\n\n  const updateConditions = (condition) => {\n    const renderedCondition = createCondition(condition)\n    if (renderedCondition !== undefined) {\n      uiImpossible = false\n      conditionContainer.innerHTML = renderedCondition\n      showJSONMode(jsonMode)\n    } else {\n      uiImpossible = true\n      showJSONMode(true)\n    }\n  }\n  const showJSONMode = (showJSON) => {\n    jsonMode = !!showJSON\n    let uiDisplay = ''\n    let jsonDisplay = 'none'\n    let toggleLabel = 'Edit JSON'\n    if (showJSON) {\n      uiDisplay = 'none'\n      jsonDisplay = ''\n      toggleLabel = 'Edit with UI'\n    }\n    if (uiImpossible) {\n      toggleLabel = 'Cannot show JSON structure through UI'\n    }\n    conditionContainer.style.display = uiDisplay\n    valueControl.style.display = jsonDisplay\n    conditionsToggler.innerHTML = toggleLabel\n  }\n  conditionsToggler.addEventListener('click', () => {\n    if (uiImpossible) {\n      return\n    }\n    showJSONMode(!jsonMode)\n  })\n\n  conditionContainer.addEventListener('click', function(e) {\n    const target = e.target\n    let targetDestination = target.getAttribute('data-destination')\n    if (!targetDestination) {\n      return\n    }\n    let targetAction = target.getAttribute('data-action')\n    if (targetAction === 'add') {\n      let destination = getValueDestination(targetDestination)\n      destination.push({})\n    } else if (targetAction === 'remove') {\n      let targetIndex\n      targetDestination = targetDestination.replace(/\\[(\\d+)\\]$/, (m, m1) => {\n        targetIndex = m1\n        return ''\n      })\n      let destination = getValueDestination(targetDestination)\n      destination.splice(targetIndex, 1)\n    } else if (targetAction === 'convert') {\n      if (targetDestination === 'TOP') {\n        targetDestination = ''\n      }\n      let destination = getValueDestination(targetDestination)\n      let destinationValue = JSON.parse(JSON.stringify(destination))\n      Object.keys(destination).forEach(key => {\n        delete destination[key]\n      })\n      destination.all = [destinationValue]\n    } else if (targetAction === 'revert') {\n      let destinationValue = getValueDestination(targetDestination)\n      let destination = getValueDestination(targetDestination.replace(/\\.[^.]+$/, ''))\n      Object.keys(destination).forEach(key => {\n        delete destination[key]\n      })\n      Object.keys(destinationValue).forEach(key => {\n        destination[key] = destinationValue[key]\n      })\n    }\n    updateConditions(value)\n  })\n  conditionContainer.addEventListener('change', function(e) {\n    const target = e.target\n    let targetValue = target.value\n    let [name, destination] = target.name.split('===')\n    destination = destination || ''\n    let valueDestination = getValueDestination(destination)\n    if (name === 'identifier') {\n      delete valueDestination.operator\n      delete valueDestination.value\n    } else if (name === 'operator') {\n      if (targetValue.startsWith('!')) {\n        targetValue = targetValue.substr(1)\n        valueDestination.negated = true\n      } else {\n        delete valueDestination.negated\n      }\n      if (targetValue === 'defined' || targetValue === 'isTrue') {\n        delete valueDestination.value\n      }\n    } else if (name === 'conditionsType') {\n      let currentValue = []\n      conditionsType.forEach(type => {\n        if (valueDestination[type]) {\n          currentValue = valueDestination[type]\n          delete valueDestination[type]\n        }\n      })\n      valueDestination[targetValue] = currentValue\n    }\n    if (name === 'value' && targetValue !== '') {\n      let valueType = getOperatorProperty(value.operator, 'type')\n      //allowableOperators.filter(operator => operator.operator === value.operator)[0].type\n      if (valueType === 'number') {\n        let numberValue = Number(targetValue)\n        if (!isNaN(numberValue)) {\n          targetValue = numberValue\n        }\n      }\n    }\n    valueDestination[name] = targetValue\n    updateValueControl('condition')\n    updateConditions(value)\n  })\n\n  const formElements = document.forms[0].elements\n\n  allowableIdentifiers = JSON.parse(unescape(formElements.booleanConditional.value)).reverse()\n\n  const allowableOperatorsIn = JSON.parse(unescape(formElements.allowableOperators.value))\n  allowableOperators = []\n  Object.keys(allowableOperatorsIn).forEach(key => {\n    const operatorValues = allowableOperatorsIn[key]\n    const type = operatorValues.type\n    allowableOperators.push({\n      operator: key,\n      type,\n      value: key,\n      label: operatorValues.yes\n    })\n    allowableOperators.push({\n      operator: key,\n      type,\n      value: `!${key}`,\n      label: operatorValues.no\n    })\n  })\n\n  valueControl = formElements.value\n  valueControl.addEventListener('change', () => {\n    value = JSON.parse(valueControl.value)\n    updateConditions(value)\n  })\n\n\n  conditionContainer.parentNode.insertBefore(valueControl, conditionContainer.nextSibling)\n\n  let value = valueControl.value ? JSON.parse(valueControl.value) : valueControl.value\n\n  const getValueDestination = (destination) => {\n    let valueDestination\n    eval(`valueDestination = value${destination}`)\n    return valueDestination\n  }\n\n  const updateValueControl = (input) => {\n    if (input === 'condition') {\n      value = value || {identifier: '', operator: ''}\n      input = JSON.stringify(value, null, 2)\n    } else {\n      value = undefined\n    }\n    valueControl.value = input\n  }\n\n  const booleanConditionalNodeList = formElements.booleanConditionalOptions\n\n  let typeValue = typeof value === 'boolean' ? value.toString() : 'condition'\n  if (typeof value === 'boolean') {\n    value = undefined\n  }\n\n  booleanConditionalNodeList.value = typeValue\n\n  booleanConditional.classList.remove('js-hidden')\n\n  for (let index = 0; index < 3; index++) {\n    booleanConditionalNodeList.item(index).addEventListener('change', function() {\n      updateValueControl(this.value)\n      updateConditions(value)\n    })\n  }\n\n  if (typeof value === 'object') {\n    updateConditions(value)\n  } else {\n    valueControl.style.display = 'none'\n  }\n//})()\n"],"sourceRoot":""}